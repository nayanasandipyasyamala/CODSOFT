#include <iostream>
#include <string>
using namespace std;
const int MAX_TASKS = 100;
struct Task {
    string name;
    bool completed;
};
class ToDoList {
private:
    Task task[MAX_TASKS];
    int taskCount;
public:
    ToDoList() : taskCount(0) {}
    void addTask(const string& name) {
        if (taskCount >= MAX_TASKS) {
            cout << "Sorry, the task list is full! Cannot add more tasks.\n";
            return;
        }
        task[taskCount++] = {name, false};
        cout << "Task added successfully.\n";
    }
    void viewTasks() const {
        if (taskCount == 0) {
            cout << "No tasks in your To-Do list. Add some tasks to get started!\n";
            return;
        }
        cout << "\nYour To-Do List:\n";
        for (int i = 0; i < taskCount; ++i) {
            cout << i + 1 << ". " << task[i].name;
            cout << " [" << (task[i].completed ? "Completed" : "Pending") << "]\n";
        }
    }
    void markTaskCompleted(int tn) {
        if (tn < 1 || tn > taskCount) {
            cout << "Invalid task number. Please try again.\n";
            return;
        }
        task[tn - 1].completed = true;
        cout << "Task marked as completed.\n";
    }
    void removeTask(int tn) {
        if (tn < 1 || tn > taskCount) {
            cout << "Invalid task number. Please try again.\n";
            return;
        }
        for (int i = tn - 1; i < taskCount - 1; ++i) {
            task[i] = task[i + 1];
        }
        --taskCount;
        cout << "Task removed successfully.\n";
    }
};

int main() {
    ToDoList tdl;
    int choice;
    string name;
    int tn;
    cout << "Welcome to the To-Do List!\n";
    do {
        cout << "\n1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore();
        switch (choice) {
            case 1:
                cout << "Enter the task description: ";
                getline(cin, name);
                tdl.addTask(name);
                break;
            case 2:
                tdl.viewTasks();
                break;
            case 3:
                cout << "Enter the task number to mark as completed: ";
                cin >> tn;
                tdl.markTaskCompleted(tn);
                break;
            case 4:
                cout << "Enter the task number to remove: ";
                cin >> tn;
                tdl.removeTask(tn);
                break;
            case 5:
                cout << "Thank you for using the To-Do List!\n";
                break;
            default:
                cout << "Invalid choice. Please select a valid option.\n";
        }
    } while (choice != 5);
    return 0;
}
